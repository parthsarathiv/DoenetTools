(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[50],{

/***/ 496:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return useDoenetRenderer; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);



function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

 //Renderers will need to set doenetPropsForChildren locally and pass it along. 
//Renderer can change it later and values will be here

function useDoenetRenderer(props) {
  var initializeChildrenOnConstruction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var doenetPropsForChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(0),
      _useState2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_useState, 2),
      updateCount = _useState2[0],
      setUpdateCount = _useState2[1];

  var stateValues = props.componentInstructions.stateValues;
  var actions = props.componentInstructions.actions;
  var children = [];
  var name = props.componentInstructions.componentName; // console.log("updateCount",updateCount)

  props.rendererUpdateMethods[name] = {
    update: function update() {
      setUpdateCount(updateCount + 1);
    },
    addChildren: addChildren,
    removeChildren: removeChildren,
    swapChildren: swapChildren
  };

  function addChildren(instruction) {
    var childInstructions = childrenToCreate[instruction.indexForParent];
    var child = createChildFromInstructions(childInstructions);
    children.splice(instruction.indexForParent, 0, child);
    children = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(children); // needed for React to recognize it's different

    setUpdateCount(updateCount + 1);
  }

  function removeChildren(instruction) {
    children.splice(instruction.firstIndexInParent, instruction.numberChildrenDeleted);
    children = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(children); // needed for React to recognize it's different

    var _iterator = _createForOfIteratorHelper(instruction.deletedComponentNames),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var componentName = _step.value;
        delete props.rendererUpdateMethods[componentName];
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    setUpdateCount(updateCount + 1);
  }

  function swapChildren(instruction) {
    var _ref = [children[instruction.index2], children[instruction.index1]];
    children[instruction.index1] = _ref[0];
    children[instruction.index2] = _ref[1];
    children = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(children); // needed for React to recognize it's different

    setUpdateCount(updateCount + 1);
  }

  if (initializeChildrenOnConstruction) {
    initializeChildren();
  }

  function initializeChildren() {
    var _iterator2 = _createForOfIteratorHelper(props.componentInstructions.children),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var childInstructions = _step2.value;
        var child = createChildFromInstructions(childInstructions);
        children.push(child);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }

    return children;
  }

  function createChildFromInstructions(childInstructions) {
    var propsForChild = {
      key: childInstructions.componentName,
      componentInstructions: childInstructions,
      rendererClasses: props.rendererClasses,
      rendererUpdateMethods: props.rendererUpdateMethods,
      flags: props.flags
    };
    Object.assign(propsForChild, doenetPropsForChildren);
    var child = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(props.rendererClasses[childInstructions.rendererType], propsForChild);
    return child;
  }

  function updatesetDoenetPropsForChildren(props) {
    setDoenetPropsForChildren(props);
  }

  return [name, stateValues, actions, children, initializeChildren, updatesetDoenetPropsForChildren];
}

/***/ })

}]);